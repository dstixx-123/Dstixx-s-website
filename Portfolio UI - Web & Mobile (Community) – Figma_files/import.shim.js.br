console.log("[import] git: 86ffa6f06c6b7517dcda709b1b5c2393bc45ffbd, stamp: 939A86C364E98F39");
!function(){let e,t=e=>{};function r(t){e=t}function n(e){t=e}function o(e){t(e)}let s=!1;function i(){console.log("cancelConversion"),s=!0,g&&(g.terminate(),g=null),u&&(u=null);for(let e in m){let t=m[e];delete m[e],t.reject(new Error("Canceled import."))}}function a(){return s}function l(){s=!1}function c(e,t){let r=e.dataTransfer,n=Array.prototype.forEach;function o(e,r){a()||t(r,e)}if(l(),r.items){let e=!1;if(n.call(r.items,(t=>{if(t.webkitGetAsEntry){let r=t.webkitGetAsEntry();if(r){let t=r.name;r.isDirectory?r.getFile("Data",null,(e=>e.file((e=>o(e,t))))):r.isFile&&r.file((e=>o(e,t))),e=!0}}})),e)return}n.call(r.files,(e=>o(e,e.name)))}let u=null,f=!0;function d(){f=!1}function p(){if(!u){let t=e||"import.worker.js",r=e=>{try{g=new Worker(e)}catch(e){throw u=null,new Error("Failed to load the web worker. Please contact Figma for support.")}return g.onmessage=b,g};u=f?function(e,t){return new Promise(((r,n)=>{let o=new XMLHttpRequest;o.onload=()=>{o.status>=200&&o.status<400&&r(o.response)},o.onloadend=()=>{n(new Error("Failed to download the file importer. Please make sure you're connected to the internet and try again."))},o.open("GET",e),o.responseType=t,o.send(null)}))}(t,"blob").then((e=>r(URL.createObjectURL(e)))):new Promise(((e,n)=>{e(r(t))}))}return u}let g=null,m={},w=0;function b(e){let r=e.data;switch(r.type){case"ConversionFailureResponse":{let e=r;if(e.id in m){let t=m[e.id];delete m[e.id];let r=e.error;r.inferredFormat=e.inferredFormat,r.warnings=e.warnings,r.reportError=e.reportError,e.originalError&&(r.cause=e.originalError),t.reject(r)}break}case"ConversionSuccessResponse":{let e=r;if(e.id in m){let r=m[e.id];delete m[e.id],a()?(t(100),r.reject(new Error("Import canceled"))):(t(20),r.resolve(e.result))}break}case"UpdateProgressMessage":t&&t(r.percentage);break;case"LoadFontMessage":{let t=r,n=m[t.id];(n&&n.fontLoader?n.fontLoader.getFont(t.postscript):Promise.reject(null)).then((r=>{let n={type:"FontLoadedMessage",id:t.id,postscript:t.postscript,result:r};e.target.postMessage(n,[r.font.buffer])})).catch((()=>{let r={type:"FontLoadedMessage",id:t.id,postscript:t.postscript,result:null};e.target.postMessage(r)}));break}default:console.warn("import shim got unsupported message: "+r.type)}}function y(e,t){if(e.length<t.length)return!1;for(let r=0;r<t.length;r++)if(e[r]!==t[r])return!1;return!0}function F(e){return p().then((t=>new Promise(((r,n)=>{let o=e.message.id;m[o]={resolve:r,reject:n,fontLoader:e.fontLoader},t.postMessage(e.message,e.buffers)}))))}async function h({blob:e,featureFlags:t,fontLoader:r,isUserFigmaEmployee:n,fileExtension:o}){if(!a()){const s=new Uint8Array(await e.slice(0,20).arrayBuffer());if(E(s)||k(s)){let t=URL.createObjectURL(e);const n=new Image,o=new Promise(((e,t)=>{n.onerror=()=>{t({message:"Invalid image",stack:(new Error).stack})},n.onload=e}));n.src=t,await o;const s=new Uint8Array(await e.arrayBuffer()),i={type:"ImageConversionRequest",id:w++,bytes:s,width:n.width,height:n.height};return await F({message:i,buffers:[s.buffer],fontLoader:r})}const i={type:"FileConversionRequest",id:w++,blob:e,featureFlags:t,isUserFigmaEmployee:n,fileExtension:o};return await F({message:i,buffers:[],fontLoader:r})}return{file:null,videos:[],images:[],warnings:[]}}function E(e){return y(e,[137,80,78,71,13,10,26,10])}function k(e){return y(e,[255,216])}function L(e){return y(e,[71,73,70,56,55,97])||y(e,[71,73,70,56,57,97])}window.createFileImporter=e=>(delete window.createFileImporter,r(e),{convertFile:h,disableWorkerBlob:d,cancelConversion:i,hasCanceled:a,resetCancel:l,setUpdateProgressCallback:n,callUpdateProgressCallback:o,extractFilesFromDropEvent:c,isProbablyJPEGFile:k,isProbablyPNGFile:E,isProbablyGIFFile:L})}();
